// Generated by CoffeeScript 1.10.0
(function() {
  var BaseChild, Metafields, ProductVariant,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseChild = require('./base_child');

  Metafields = require('./metafield');

  ProductVariant = (function(superClass) {
    extend(ProductVariant, superClass);

    ProductVariant.prototype.parent = "/products";

    ProductVariant.prototype.slug = "variant";

    ProductVariant.prototype.child = "/variants";

    function ProductVariant(site) {
      ProductVariant.__super__.constructor.call(this, site);
    }

    ProductVariant.prototype.get = function(id, params, callback) {
      var ref, url;
      if (typeof params === 'function') {
        ref = [callback, params], params = ref[0], callback = ref[1];
      }
      if (id == null) {
        callback(new Error('missing id'));
      }
      url = this.resource.queryString("" + this.site + this.child + "/" + id, params);
      return this.resource.get(url, this.slug, callback);
    };

    ProductVariant.prototype.update = function(id, fields, callback) {
      var url;
      if (id == null) {
        callback(new Error('missing id'));
      }
      url = this.resource.queryString("" + this.site + this.child + "/" + id);
      return this.resource.put(url, this.slug, fields, callback);
    };

    module.exports = ProductVariant;

    return ProductVariant;

  })(BaseChild);

}).call(this);
